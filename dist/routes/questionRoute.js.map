{"version":3,"sources":["../../routes/questionRoute.js"],"names":["router","express","Router","get","QuestionRoute","allQuestion","validateToken","specificQuestion","post","postQuestion","addAnswer","notFound"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,GAAP,CAAW,YAAX,EAAyBC,yBAAcC,WAAvC;AACAL,OAAOG,GAAP,CAAW,gBAAX,EAA6BG,uBAA7B,EAA4CF,yBAAcG,gBAA1D;AACAP,OAAOQ,IAAP,CAAY,YAAZ,EAA0BF,uBAA1B,EAAyCF,yBAAcK,YAAvD;AACAT,OAAOQ,IAAP,CAAY,wBAAZ,EAAsCF,uBAAtC,EAAqDF,yBAAcM,SAAnE;AACAV,OAAOG,GAAP,CAAW,GAAX,EAAgBC,yBAAcO,QAA9B;;kBAEeX,M","file":"questionRoute.js","sourcesContent":["import express from 'express';\nimport validateToken from '../middleware/validateToken';\nimport QuestionRoute from '../controllers/QuestionRoutes';\n\nconst router = express.Router();\n\nrouter.get('/questions', QuestionRoute.allQuestion);\nrouter.get('/questions/:id', validateToken, QuestionRoute.specificQuestion);\nrouter.post('/questions', validateToken, QuestionRoute.postQuestion);\nrouter.post('/questions/:id/answers', validateToken, QuestionRoute.addAnswer);\nrouter.get('*', QuestionRoute.notFound);\n\nexport default router;\n"]}