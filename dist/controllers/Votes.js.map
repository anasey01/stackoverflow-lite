{"version":3,"sources":["../../controllers/Votes.js"],"names":["db","DatabaseManager","questionManager","QuestionManager","Votes","req","res","params","questionId","answerId","user","userId","username","createVotes","err","result","votes","totalVotes","length","totalUpvote","totalDownvote","questionid","answerid","status","json","success","messgae","forEach","item","upvotes","downvotes","messgage"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;AAEA,IAAMA,KAAK,IAAIC,yBAAJ,EAAX;AACA,IAAMC,kBAAkB,IAAIC,yBAAJ,CAAoBH,EAApB,CAAxB;;IAEMI,K;;;;;;;2BACUC,G,EAAKC,G,EAAK;AAAA,wBACWD,IAAIE,MADf;AAAA,UACdC,UADc,eACdA,UADc;AAAA,UACFC,QADE,eACFA,QADE;AAAA,sBAEOJ,IAAIK,IAFX;AAAA,UAEdC,MAFc,aAEdA,MAFc;AAAA,UAENC,QAFM,aAENA,QAFM;;AAGtBV,sBAAgBW,WAAhB,CAA4BL,UAA5B,EAAwCC,QAAxC,EAAkDE,MAAlD,EAA0D,SAA1D,EAAqE,WAArE,EAAkFC,QAAlF,EAA4F,UAACE,GAAD,EAAMC,MAAN,EAAiB;AAC3G,YAAMC,QAAQ;AACZC,sBAAYF,OAAOG,MADP;AAEZC,uBAAa,CAFD;AAGZC,yBAAe,CAHH;AAIZZ,sBAAYO,OAAO,CAAP,EAAUM,UAJV;AAKZZ,oBAAUM,OAAO,CAAP,EAAUO;AALR,SAAd;AAOA,YAAIR,GAAJ,EAAS;AACP,iBAAOR,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,qBAAS,KADiB;AAE1BC,qBAAS;AAFiB,WAArB,CAAP;AAID;AACDX,eAAOY,OAAP,CAAe,UAACC,IAAD,EAAU;AACvBZ,gBAAMG,WAAN,IAAqBS,KAAKC,OAA1B;AACAb,gBAAMI,aAAN,IAAuBQ,KAAKE,SAA5B;AACD,SAHD;AAIA,eAAOxB,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,IADiB;AAE1BM,oBAAU,iBAFgB;AAG1Bf;AAH0B,SAArB,CAAP;AAKD,OAvBD;AAwBD;;;6BAEeX,G,EAAKC,G,EAAK;AAAA,yBACSD,IAAIE,MADb;AAAA,UAChBC,UADgB,gBAChBA,UADgB;AAAA,UACJC,QADI,gBACJA,QADI;AAAA,UAEhBE,MAFgB,GAELN,IAAIK,IAFC,CAEhBC,MAFgB;;AAGxBT,sBAAgBW,WAAhB,CAA4BL,UAA5B,EAAwCC,QAAxC,EAAkDE,MAAlD,EAA0D,WAA1D,EAAuE,SAAvE,EAAkF,UAACG,GAAD,EAAMC,MAAN,EAAiB;AACjG,YAAIC,QAAQ;AACVC,sBAAYF,OAAOG,MADT;AAEVC,uBAAa,CAFH;AAGVC,yBAAe,CAHL;AAIVZ,sBAAYO,OAAO,CAAP,EAAUM,UAJZ;AAKVZ,oBAAUM,OAAO,CAAP,EAAUO;AALV,SAAZ;AAOA,YAAIR,GAAJ,EAAS;AACP,iBAAOR,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,qBAAS,KADiB;AAE1BC,qBAAS;AAFiB,WAArB,CAAP;AAID;AACDX,eAAOY,OAAP,CAAe,UAACC,IAAD,EAAU;AACvBZ,gBAAMG,WAAN,IAAqBS,KAAKC,OAA1B;AACAb,gBAAMI,aAAN,IAAuBQ,KAAKE,SAA5B;AACD,SAHD;AAIA,eAAOxB,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,IADiB;AAE1BM,oBAAU,iBAFgB;AAG1Bf;AAH0B,SAArB,CAAP;AAKD,OAvBD;AAwBD;;;;;;kBAEYZ,K","file":"Votes.js","sourcesContent":["import DatabaseManager from '../net/DatabaseManager';\r\nimport QuestionManager from './QuestionManager';\r\n\r\nconst db = new DatabaseManager();\r\nconst questionManager = new QuestionManager(db);\r\n\r\nclass Votes {\r\n  static upvote(req, res) {\r\n    const { questionId, answerId } = req.params;\r\n    const { userId, username } = req.user;\r\n    questionManager.createVotes(questionId, answerId, userId, 'upvotes', 'downvotes', username, (err, result) => {\r\n      const votes = {\r\n        totalVotes: result.length,\r\n        totalUpvote: 0,\r\n        totalDownvote: 0,\r\n        questionId: result[0].questionid,\r\n        answerId: result[0].answerid,\r\n      };\r\n      if (err) {\r\n        return res.status(401).json({\r\n          success: false,\r\n          messgae: 'unable to vote',\r\n        });\r\n      }\r\n      result.forEach((item) => {\r\n        votes.totalUpvote += item.upvotes;\r\n        votes.totalDownvote += item.downvotes;\r\n      });\r\n      return res.status(200).json({\r\n        success: true,\r\n        messgage: 'stats for votes',\r\n        votes,\r\n      });\r\n    });\r\n  }\r\n\r\n  static downvote(req, res) {\r\n    const { questionId, answerId } = req.params;\r\n    const { userId } = req.user;\r\n    questionManager.createVotes(questionId, answerId, userId, 'downvotes', 'upvotes', (err, result) => {\r\n      let votes = {\r\n        totalVotes: result.length,\r\n        totalUpvote: 0,\r\n        totalDownvote: 0,\r\n        questionId: result[0].questionid,\r\n        answerId: result[0].answerid,\r\n      }\r\n      if (err) {\r\n        return res.status(401).json({\r\n          success: false,\r\n          messgae: 'unable to vote',\r\n        });\r\n      }\r\n      result.forEach((item) => {\r\n        votes.totalUpvote += item.upvotes;\r\n        votes.totalDownvote += item.downvotes;\r\n      });\r\n      return res.status(200).json({\r\n        success: true,\r\n        messgage: 'stats for votes',\r\n        votes,\r\n      });\r\n    });\r\n  }\r\n}\r\nexport default Votes;\r\n"]}