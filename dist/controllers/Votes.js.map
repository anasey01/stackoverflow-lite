{"version":3,"sources":["../../controllers/Votes.js"],"names":["db","DatabaseManager","questionManager","QuestionManager","Votes","req","res","params","questionId","answerId","user","userId","username","createVotes","Number","err","vote","status","json","success","messgae","messgage","getVotes","allVotes","message"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;AAEA,IAAMA,KAAK,IAAIC,yBAAJ,EAAX;AACA,IAAMC,kBAAkB,IAAIC,yBAAJ,CAAoBH,EAApB,CAAxB;;IAEMI,K;;;;;;;2BACUC,G,EAAKC,G,EAAK;AAAA,wBACWD,IAAIE,MADf;AAAA,UACdC,UADc,eACdA,UADc;AAAA,UACFC,QADE,eACFA,QADE;AAAA,sBAEOJ,IAAIK,IAFX;AAAA,UAEdC,MAFc,aAEdA,MAFc;AAAA,UAENC,QAFM,aAENA,QAFM;;AAGtBV,sBAAgBW,WAAhB,CAA4BC,OAAON,UAAP,CAA5B,EAAgDM,OAAOL,QAAP,CAAhD,EAAkEE,MAAlE,EAA0E,SAA1E,EAAqF,WAArF,EAAkGC,QAAlG,EAA4G,UAACG,GAAD,EAAMC,IAAN,EAAe;AACzH,YAAID,GAAJ,EAAS;AACP,iBAAOT,IAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,qBAAS,KADiB;AAE1BC,qBAAS;AAFiB,WAArB,CAAP;AAID;AACD,eAAOd,IAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,IADiB;AAE1BE,oBAAU,iBAFgB;AAG1BL;AAH0B,SAArB,CAAP;AAKD,OAZD;AAaD;;;6BAEeX,G,EAAKC,G,EAAK;AAAA,uBACKD,IAAIK,IADT;AAAA,UAChBC,MADgB,cAChBA,MADgB;AAAA,UACRC,QADQ,cACRA,QADQ;AAAA,yBAESP,IAAIE,MAFb;AAAA,UAEhBC,UAFgB,gBAEhBA,UAFgB;AAAA,UAEJC,QAFI,gBAEJA,QAFI;;AAGxBP,sBAAgBW,WAAhB,CAA4BC,OAAON,UAAP,CAA5B,EAAgDM,OAAOL,QAAP,CAAhD,EAAkEE,MAAlE,EAA0E,WAA1E,EAAuF,SAAvF,EAAkGC,QAAlG,EAA4G,UAACG,GAAD,EAAMC,IAAN,EAAe;AACzH,YAAID,GAAJ,EAAS;AACP,iBAAOT,IAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,qBAAS,KADiB;AAE1BC,qBAAS;AAFiB,WAArB,CAAP;AAID;AACD,eAAOd,IAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,IADiB;AAE1BE,oBAAU,iBAFgB;AAG1BL;AAH0B,SAArB,CAAP;AAKD,OAZD;AAaD;;;gCAEkBX,G,EAAKC,G,EAAK;AAAA,yBACMD,IAAIE,MADV;AAAA,UACnBC,UADmB,gBACnBA,UADmB;AAAA,UACPC,QADO,gBACPA,QADO;;AAE3BP,sBAAgBoB,QAAhB,CAAyBR,OAAON,UAAP,CAAzB,EAA6CM,OAAOL,QAAP,CAA7C,EAA+D,UAACM,GAAD,EAAMQ,QAAN,EAAmB;AAChF,YAAIR,GAAJ,EAAS;AACP,iBAAOT,IAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,qBAAS,KADiB;AAE1BK,qBAAS;AAFiB,WAArB,CAAP;AAID;AACD,eAAOlB,IAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,IADiB;AAE1BK,mBAAS,WAFiB;AAG1BD;AAH0B,SAArB,CAAP;AAKD,OAZD;AAaD;;;;;;kBAEYnB,K","file":"Votes.js","sourcesContent":["import DatabaseManager from '../net/DatabaseManager';\nimport QuestionManager from './QuestionManager';\n\nconst db = new DatabaseManager();\nconst questionManager = new QuestionManager(db);\n\nclass Votes {\n  static upvote(req, res) {\n    const { questionId, answerId } = req.params;\n    const { userId, username } = req.user;\n    questionManager.createVotes(Number(questionId), Number(answerId), userId, 'upvotes', 'downvotes', username, (err, vote) => {\n      if (err) {\n        return res.status(401).json({\n          success: false,\n          messgae: 'unable to vote',\n        });\n      }\n      return res.status(200).json({\n        success: true,\n        messgage: 'stats for votes',\n        vote,\n      });\n    });\n  }\n\n  static downvote(req, res) {\n    const { userId, username } = req.user;\n    const { questionId, answerId } = req.params;\n    questionManager.createVotes(Number(questionId), Number(answerId), userId, 'downvotes', 'upvotes', username, (err, vote) => {\n      if (err) {\n        return res.status(401).json({\n          success: false,\n          messgae: 'unable to vote',\n        });\n      }\n      return res.status(200).json({\n        success: true,\n        messgage: 'stats for votes',\n        vote,\n      });\n    });\n  }\n\n  static getAllVotes(req, res) {\n    const { questionId, answerId } = req.params;\n    questionManager.getVotes(Number(questionId), Number(answerId), (err, allVotes) => {\n      if (err) {\n        return res.status(401).json({\n          success: false,\n          message: 'unable to get all votes',\n        });\n      }\n      return res.status(200).json({\n        success: true,\n        message: 'All votes',\n        allVotes,\n      });\n    });\n  }\n}\nexport default Votes;\n"]}