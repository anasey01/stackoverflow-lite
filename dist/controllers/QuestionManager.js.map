{"version":3,"sources":["../../controllers/QuestionManager.js"],"names":["QuestionManager","connection","conn","table","answerTable","userId","title","content","callback","insertQuestion","err","result","selectById","res","selectQuestions","id","questionId","answer","insertAnswer","getAnswer","selectAnswer"],"mappings":";;;;;;;;;;IACMA,e;AACJ,2BAAYC,UAAZ,EAAwB;AAAA;;AACtB,SAAKC,IAAL,GAAYD,UAAZ;AACA,SAAKE,KAAL,GAAa,WAAb;AACA,SAAKC,WAAL,GAAmB,SAAnB;AACD;;;;mCAEcC,M,EAAQC,K,EAAOC,O,EAASC,Q,EAAU;AAAA;;AAC/C,WAAKN,IAAL,CAAUO,cAAV,CAAyBJ,MAAzB,EAAiCC,KAAjC,EAAwCC,OAAxC,EAAiD,UAACG,GAAD,EAAMC,MAAN,EAAiB;AAChE,YAAID,GAAJ,EAAS;AACPF,mBAAS,OAAT;AACD;AACD,cAAKN,IAAL,CAAUU,UAAV,CAAqB,MAAKT,KAA1B,EAAiCE,MAAjC,EAAyC,UAACQ,GAAD,EAAMH,GAAN,EAAc;AACrD,cAAIA,GAAJ,EAAS;AACPF,qBAASE,GAAT;AACD,WAFD,MAEO;AACLF,qBAASK,GAAT;AACD;AACF,SAND;AAOD,OAXD;AAYD;;;mCAEcL,Q,EAAU;AACvB,WAAKN,IAAL,CAAUY,eAAV,CAA0B,UAACH,MAAD,EAASD,GAAT,EAAiB;AACzC,YAAIA,GAAJ,EAAS;AACPF,mBAAS,yCAAT;AACD;AACDA,iBAASG,MAAT;AACD,OALD;AAMD;;;gCAEWI,E,EAAIP,Q,EAAU;AACxB,WAAKN,IAAL,CAAUU,UAAV,CAAqB,KAAKT,KAA1B,EAAiCY,EAAjC,EAAqC,UAACJ,MAAD,EAASD,GAAT,EAAiB;AACpD,YAAIA,GAAJ,EAAS;AACPF,mBAASE,GAAT;AACD;AACDF,iBAASG,MAAT;AACD,OALD;AAMD;;;iCAEYN,M,EAAQW,U,EAAYC,M,EAAQT,Q,EAAU;AAAA;;AACjD,WAAKN,IAAL,CAAUgB,YAAV,CAAuBb,MAAvB,EAA+BW,UAA/B,EAA2CC,MAA3C,EAAmD,UAACP,GAAD,EAAMC,MAAN,EAAiB;AAClE,YAAID,GAAJ,EAAS;AACPF,mBAASE,GAAT;AACD;AACD,eAAKS,SAAL,CAAeH,UAAf,EAA2B,UAACL,MAAD,EAASD,GAAT,EAAiB;AAC1CF,mBAASG,MAAT;AACD,SAFD;AAGD,OAPD;AAQD;;;8BAESK,U,EAAYR,Q,EAAU;AAC9B,WAAKN,IAAL,CAAUkB,YAAV,CAAuB,KAAKhB,WAA5B,EAAyCY,UAAzC,EAAqD,UAACN,GAAD,EAAMC,MAAN,EAAiB;AACpEH,iBAASG,MAAT,EAAiBD,GAAjB;AACD,OAFD;AAGD;;;;;;kBAIYV,e","file":"QuestionManager.js","sourcesContent":["\nclass QuestionManager {\n  constructor(connection) {\n    this.conn = connection;\n    this.table = 'questions';\n    this.answerTable = 'answers';\n  }\n\n  createQuestion(userId, title, content, callback) {\n    this.conn.insertQuestion(userId, title, content, (err, result) => {\n      if (err) {\n        callback('error');\n      }\n      this.conn.selectById(this.table, userId, (res, err) => {\n        if (err) {\n          callback(err);\n        } else {\n          callback(res);\n        }\n      });\n    });\n  }\n\n  getAllQuestion(callback) {\n    this.conn.selectQuestions((result, err) => {\n      if (err) {\n        callback('There was an error retrieving questions');\n      }\n      callback(result);\n    });\n  }\n\n  getQuestion(id, callback) {\n    this.conn.selectById(this.table, id, (result, err) => {\n      if (err) {\n        callback(err);\n      }\n      callback(result);\n    });\n  }\n\n  createAnswer(userId, questionId, answer, callback) {\n    this.conn.insertAnswer(userId, questionId, answer, (err, result) => {\n      if (err) {\n        callback(err);\n      }\n      this.getAnswer(questionId, (result, err) => {\n        callback(result);\n      });\n    });\n  }\n\n  getAnswer(questionId, callback) {\n    this.conn.selectAnswer(this.answerTable, questionId, (err, result) => {\n      callback(result, err);\n    });\n  }\n\n}\n\nexport default QuestionManager;\n"]}