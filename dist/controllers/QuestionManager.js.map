{"version":3,"sources":["../../controllers/QuestionManager.js"],"names":["QuestionManager","connection","conn","table","answerTable","userId","questionTitle","questionContent","username","callback","insertQuestion","err","result","rows","selectQuestions","questionId","selectByQuestionId","error","selectQuestionByUserId","answer","answerNumber","insertAnswer","answerId","selectOneAnswer","selectQuestionAndAnswer","selectAnswer","updateMarkedAnswer","updateQuestionAnswer","currentVote","otherVote","insertVotes","deleteQuestionById"],"mappings":"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","file":"QuestionManager.js","sourcesContent":["\nclass QuestionManager {\n  constructor(connection) {\n    this.conn = connection;\n    this.table = 'questions';\n    this.answerTable = 'answers';\n  }\n\n  createQuestion(userId, questionTitle, questionContent, username, callback) {\n    this.conn.insertQuestion(userId, questionTitle, questionContent, username, (err, result) => {\n      callback(err, result.rows);\n    });\n  }\n\n  getAllQuestion(callback) {\n    this.conn.selectQuestions((result, err) => {\n      if (err) {\n        callback('There was an error retrieving questions');\n      }\n      callback(result);\n    });\n  }\n\n  getQuestion(questionId, callback) {\n    this.conn.selectByQuestionId(this.table, questionId, (error, result) => {\n      callback(error, result);\n    });\n  }\n\n  getUserQuestions(userId, callback) {\n    this.conn.selectQuestionByUserId(userId, (error, result) => {\n      callback(error, result);\n    });\n  }\n\n  createAnswer(userId, questionId, answer, answerNumber, username, callback) {\n    this.conn.insertAnswer(userId, questionId, answer, answerNumber, username, (err, result) => {\n      callback(err, result);\n    });\n  }\n\n  getSpecificAnswer(questionId, answerId, callback) {\n    this.conn.selectOneAnswer(questionId, answerId, (result, err) => {\n      callback(result, err);\n    });\n  }\n\n  getQuestionAndAnswer(questionId, callback) {\n    this.conn.selectQuestionAndAnswer(questionId, (err, result) => {\n      callback(err, result);\n    });\n  }\n\n  getAnswer(questionId, callback) {\n    this.conn.selectAnswer(this.answerTable, questionId, (err, result) => {\n      callback(result, err);\n    });\n  }\n\n  markAnswer(answerNumber, callback) {\n    this.conn.updateMarkedAnswer(answerNumber, (err, result) => {\n      if (err) {\n        callback('error');\n      }\n      callback('successfully marked');\n    });\n  }\n\n  updateAnswer(answerNumber, answer, callback) {\n    this.conn.updateQuestionAnswer(answerNumber, answer, (err, result) => {\n      callback(err, result.rows);\n    });\n  }\n\n  createVotes(questionId, answerId, userId, currentVote, otherVote, username, callback) {\n    this.conn.insertVotes(questionId, answerId, userId, currentVote, otherVote, username, (err, result) => {\n      callback(err, result);\n    });\n  }\n\n  deleteOne(questionId, callback) {\n    this.conn.deleteQuestionById(this.table, questionId, (result, err) => {\n      callback(result, err);\n    });\n  }\n}\n\nexport default QuestionManager;\n"]}