{"version":3,"sources":["../../controllers/QuestionManager.js"],"names":["QuestionManager","connection","conn","table","answerTable","userId","questionTitle","questionContent","username","callback","insertQuestion","err","result","rows","selectQuestions","questionId","selectByQuestionId","error","selectQuestionByUsername","questionQuery","searchAllQuestion","match","answer","answerNumber","insertAnswer","answerId","selectOneAnswer","selectQuestionAndAnswer","selectAnswer","updateMarkedAnswer","updateQuestionAnswer","selectMostAnswered","mostAnswer","insertUpvotes","vote","insertDownvotes","selectUpvotes","upvotes","selectDownvotes","totalUpvotes","insertTotalNumberOfUpvotes","data","totalDownvotes","insertTotalNumberOfDownvotes","comment","insertComment","resComment","selectComments","comments","deleteQuestionById"],"mappings":"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","file":"QuestionManager.js","sourcesContent":["\r\nclass QuestionManager {\r\n  constructor(connection) {\r\n    this.conn = connection;\r\n    this.table = 'questions';\r\n    this.answerTable = 'answers';\r\n  }\r\n\r\n  createQuestion(userId, questionTitle, questionContent, username, callback) {\r\n    this.conn.insertQuestion(userId, questionTitle, questionContent, username, (err, result) => {\r\n      callback(err, result.rows);\r\n    });\r\n  }\r\n\r\n  getAllQuestion(callback) {\r\n    this.conn.selectQuestions((result, err) => {\r\n      if (err) {\r\n        callback('There was an error retrieving questions');\r\n      }\r\n      callback(result);\r\n    });\r\n  }\r\n\r\n  getQuestion(questionId, callback) {\r\n    this.conn.selectByQuestionId(this.table, questionId, (error, result) => {\r\n      callback(error, result);\r\n    });\r\n  }\r\n\r\n  getUserQuestions(username, callback) {\r\n    this.conn.selectQuestionByUsername(username, (error, result) => {\r\n      callback(error, result);\r\n    });\r\n  }\r\n\r\n  searchQuestion(questionQuery, callback) {\r\n    this.conn.searchAllQuestion(questionQuery, (error, match) => {\r\n      callback(error, match);\r\n    });\r\n  }\r\n\r\n  createAnswer(userId, questionId, answer, answerNumber, username, callback) {\r\n    this.conn.insertAnswer(userId, questionId, answer, answerNumber, username, (err, result) => {\r\n      callback(err, result);\r\n    });\r\n  }\r\n\r\n  getSpecificAnswer(questionId, answerId, callback) {\r\n    this.conn.selectOneAnswer(questionId, answerId, (result, err) => {\r\n      callback(result, err);\r\n    });\r\n  }\r\n\r\n  getQuestionAndAnswer(questionId, callback) {\r\n    this.conn.selectQuestionAndAnswer(questionId, (err, result) => {\r\n      callback(err, result);\r\n    });\r\n  }\r\n\r\n  getAnswer(questionId, callback) {\r\n    this.conn.selectAnswer(this.answerTable, questionId, (err, result) => {\r\n      callback(result, err);\r\n    });\r\n  }\r\n\r\n  markAnswer(answerNumber, callback) {\r\n    this.conn.updateMarkedAnswer(answerNumber, (err, result) => {\r\n      if (err) {\r\n        callback('error');\r\n      }\r\n      callback('successfully marked');\r\n    });\r\n  }\r\n\r\n  updateAnswer(answerNumber, answer, questionId, callback) {\r\n    this.conn.updateQuestionAnswer(answerNumber, answer, questionId, (err, result) => {\r\n      callback(err, result.rows);\r\n    });\r\n  }\r\n\r\n  orderedByMostAnswers(username, callback) {\r\n    this.conn.selectMostAnswered(username, (error, mostAnswer) => {\r\n      callback(error, mostAnswer.rows);\r\n    });\r\n  }\r\n\r\n  createUpvotes(questionId, answerId, userId, username, callback) {\r\n    this.conn.insertUpvotes(questionId, answerId, userId, username, (err, vote) => {\r\n      callback(err, vote);\r\n    });\r\n  }\r\n\r\n  createDownvotes(questionId, answerId, userId, username, callback) {\r\n    this.conn.insertDownvotes(questionId, answerId, userId, username, (err, vote) => {\r\n      callback(err, vote);\r\n    });\r\n  }\r\n\r\n  getUpvotes(questionId, answerId, callback) {\r\n    this.conn.selectUpvotes(questionId, answerId, (err, upvotes) => {\r\n      callback(err, upvotes);\r\n    });\r\n  }\r\n\r\n  getDownvotes(questionId, answerId, callback) {\r\n    this.conn.selectDownvotes(questionId, answerId, (err, upvotes) => {\r\n      callback(err, upvotes);\r\n    });\r\n  }\r\n\r\n  updateAnswerWithUpvotes(questionId, answerId, totalUpvotes, callback) {\r\n    this.conn.insertTotalNumberOfUpvotes(questionId, answerId, totalUpvotes, (error, data) => {\r\n      callback(error, data);\r\n    })\r\n  }\r\n\r\n  updateAnswerWithDownvotes(questionId, answerId, totalDownvotes, callback) {\r\n    this.conn.insertTotalNumberOfDownvotes(questionId, answerId, totalDownvotes, (error, data) => {\r\n      callback(error, data);\r\n    })\r\n  }\r\n\r\n  createComments(userId, questionId, answerId, comment, username, callback) {\r\n    this.conn.insertComment(userId, questionId, answerId, comment, username, (error, resComment) => {\r\n      callback(error, resComment);\r\n    });\r\n  }\r\n\r\n  getAllComments(questionId, callback) {\r\n    this.conn.selectComments(questionId, (error, comments) => {\r\n      callback(error, comments);\r\n    });\r\n  }\r\n\r\n  deleteOne(questionId, callback) {\r\n    this.conn.deleteQuestionById(this.table, questionId, (result, err) => {\r\n      callback(result, err);\r\n    });\r\n  }\r\n}\r\n\r\nexport default QuestionManager;\r\n"]}