{"version":3,"sources":["../../controllers/QuestionManager.js"],"names":["QuestionManager","connection","conn","table","answerTable","userId","questionTitle","questionContent","callback","insertQuestion","err","result","selectById","res","selectQuestions","questionId","selectByQuestionId","answer","insertAnswer","getAnswer","answerId","selectOneAnswer","selectAnswer","updateMarkedAnswer","updateQuestionAnswer","currentVote","otherVote","insertVotes","deleteQuestionById"],"mappings":"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","file":"QuestionManager.js","sourcesContent":["\nclass QuestionManager {\n  constructor(connection) {\n    this.conn = connection;\n    this.table = 'questions';\n    this.answerTable = 'answers';\n  }\n\n  createQuestion(userId, questionTitle, questionContent, callback) {\n    this.conn.insertQuestion(userId, questionTitle, questionContent, (err, result) => {\n      if (err) {\n        callback('error');\n      }\n      this.conn.selectById(this.table, userId, (res, err) => {\n        if (err) {\n          callback(err);\n        } else {\n          callback(res);\n        }\n      });\n    });\n  }\n\n  getAllQuestion(callback) {\n    this.conn.selectQuestions((result, err) => {\n      if (err) {\n        callback('There was an error retrieving questions');\n      }\n      callback(result);\n    });\n  }\n\n  getQuestion(questionId, callback) {\n    this.conn.selectByQuestionId(this.table, questionId, (result, err) => {\n      if (err) {\n        callback(err);\n      }\n      callback(result);\n    });\n  }\n\n  createAnswer(userId, questionId, answer, callback) {\n    this.conn.insertAnswer(userId, questionId, answer, (err, result) => {\n      if (err) {\n        callback(err);\n      }\n      this.getAnswer(questionId, (result, err) => {\n        callback(result);\n      });\n    });\n  }\n\n  getSpecificAnswer(questionId, answerId, callback) {\n    this.conn.selectOneAnswer(questionId, answerId, (result, err) => {\n      callback(result, err);\n    });\n  }\n\n  getAnswer(questionId, callback) {\n    this.conn.selectAnswer(this.answerTable, questionId, (err, result) => {\n      callback(result, err);\n    });\n  }\n\n  markAnswer(answerId, callback) {\n    this.conn.updateMarkedAnswer(answerId, (err, result) => {\n      if (err) {\n        callback('error');\n      }\n      callback('successfully marked');\n    });\n  }\n\n  updateAnswer(answerId, answer, callback) {\n    this.conn.updateQuestionAnswer(answerId, answer, (err, result) => {\n      if (err) {\n        callback('error');\n      }\n      callback('answer updated');\n    });\n  }\n\n  createVotes(questionId, answerId, userId, currentVote, otherVote, callback) {\n    this.conn.insertVotes(questionId, answerId, userId, currentVote, otherVote, (err, result) => {\n      callback(err, result);\n    });\n  }\n\n  deleteOne(questionId, callback) {\n    this.conn.deleteQuestionById(this.table, questionId, (result, err) => {\n      callback(result, err);\n    });\n  }\n}\n\nexport default QuestionManager;\n"]}