{"version":3,"sources":["../../model/dbManager.js"],"names":["pool","pg","Pool","config","dbManager","createUserTable","query","connect","err","client","done","er","result","insertUser","fullname","username","gender","password","email","error","selectUserByEmail","callback","rows","forEach","item","currentEmail","selectAll","table"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,OAAO,IAAIC,aAAGC,IAAP,CAAYC,kBAAZ,CAAb;;AAEA,IAAMC,YAAY;AAChBC,iBADgB,6BACE;AAChB,QAAMC,8TAAN;AAQA,WAAON,KAAKO,OAAL,CAAa,UAACC,GAAD,EAAMC,MAAN,EAAcC,IAAd,EAAuB;AACzC,UAAIF,GAAJ,EAAS;AACP,cAAMA,GAAN;AACD;AACDE;AACAD,aAAOH,KAAP,CAAaA,KAAb,EAAoB,UAACK,EAAD,EAAKC,MAAL,EAAgB;AAClC,YAAID,EAAJ,EAAQ,MAAMA,EAAN;AACR,eAAOC,MAAP;AACD,OAHD;AAID,KATM,CAAP;AAUD,GApBe;AAqBhBC,YArBgB,sBAqBLC,QArBK,EAqBKC,QArBL,EAqBeC,MArBf,EAqBuBC,QArBvB,EAqBiCC,KArBjC,EAqBwC;AACtD,QAAMZ,+BAA6BQ,QAA7B,UAA0CC,QAA1C,SAAsDC,MAAtD,SAAgEC,QAAhE,SAA4EC,KAA5E,wBAAN;AACAlB,SAAKO,OAAL,CAAa,UAACC,GAAD,EAAMC,MAAN,EAAcC,IAAd,EAAuB;AAClC,UAAIF,GAAJ,EAAS;AACP,cAAMA,GAAN;AACD;AACDC,aAAOH,KAAP,CAAaA,KAAb,EAAoB,UAACa,KAAD,EAAQP,MAAR,EAAmB;AACrCF;AACA,YAAIS,KAAJ,EAAW;AACT,gBAAMX,GAAN;AACD;AACD,eAAOI,MAAP;AACD,OAND;AAOAF;AACD,KAZD;AAaD,GApCe;AAsChBU,mBAtCgB,6BAsCEF,KAtCF,EAsCSG,QAtCT,EAsCmB;AACjC,QAAMf,QAAQ,yBAAd;AACAN,SAAKO,OAAL,CAAa,UAACC,GAAD,EAAMC,MAAN,EAAcC,IAAd,EAAuB;AAClC,UAAIF,GAAJ,EAAS;AACP,cAAMA,GAAN;AACD;AACDC,aAAOH,KAAP,CAAaA,KAAb,EAAoB,UAACa,KAAD,EAAQP,MAAR,EAAmB;AACrCF;AACA,YAAIS,KAAJ,EAAW;AACT,gBAAMX,GAAN;AACD;AACDI,eAAOU,IAAP,CAAYC,OAAZ,CAAoB,UAACC,IAAD,EAAU;AAC5B,cAAMC,eAAeD,KAAKN,KAA1B;AACA,cAAIO,iBAAiBP,KAArB,EAA4B;AAC1B,mBAAOG,SAASI,YAAT,CAAP;AACD;AACD,iBAAO,KAAP;AACD,SAND;AAOAf;AACD,OAbD;AAcD,KAlBD;AAmBD,GA3De;AA6DhBgB,WA7DgB,qBA6DNC,KA7DM,EA6DC;AACf3B,SAAKO,OAAL,CAAa,UAACC,GAAD,EAAMC,MAAN,EAAcC,IAAd,EAAuB;AAClC,UAAIF,GAAJ,EAAS;AACP,cAAMA,GAAN;AACD;AACD;AACAE;AACA,UAAMJ,2BAAyBqB,KAA/B;AACAlB,aAAOH,KAAP,CAAaA,KAAb,EAAoB,UAACK,EAAD,EAAKC,MAAL,EAAgB;AAClC,YAAID,EAAJ,EAAQ,MAAMA,EAAN;AACRD;AACA,eAAOE,MAAP;AACD,OAJD;AAKD,KAZD;AAaD;AA3Ee,CAAlB;;kBA+EeR,S","file":"dbManager.js","sourcesContent":["import pg from 'pg';\nimport config from './dbConfig';\n\nconst pool = new pg.Pool(config);\n\nconst dbManager = {\n  createUserTable() {\n    const query = `\n                CREATE TABLE IF NOT EXISTS users(\n                    id serial integer NOT NULL PRIMARY KEY,\n                    fullname text NOT NULL,\n                    username text NOT NULL,\n                    password text NOT NULL,\n                    gender text NOT NULL\n                )`;\n    return pool.connect((err, client, done) => {\n      if (err) {\n        throw err;\n      }\n      done();\n      client.query(query, (er, result) => {\n        if (er) throw er;\n        return result;\n      });\n    });\n  },\n  insertUser(fullname, username, gender, password, email) {\n    const query = `INSERT INTO users(${fullname}, ${username},${gender},${password},${email}) VALUES(?,?,?,?,?)`;\n    pool.connect((err, client, done) => {\n      if (err) {\n        throw err;\n      }\n      client.query(query, (error, result) => {\n        done();\n        if (error) {\n          throw err;\n        }\n        return result;\n      });\n      done();\n    });\n  },\n\n  selectUserByEmail(email, callback) {\n    const query = 'SELECT email FROM users';\n    pool.connect((err, client, done) => {\n      if (err) {\n        throw err;\n      }\n      client.query(query, (error, result) => {\n        done();\n        if (error) {\n          throw err;\n        }\n        result.rows.forEach((item) => {\n          const currentEmail = item.email;\n          if (currentEmail === email) {\n            return callback(currentEmail);\n          }\n          return false;\n        });\n        done();\n      });\n    });\n  },\n\n  selectAll(table) {\n    pool.connect((err, client, done) => {\n      if (err) {\n        throw err;\n      }\n      // release user back to the pool\n      done();\n      const query = `SELECT * FROM ${table}`;\n      client.query(query, (er, result) => {\n        if (er) throw er;\n        done();\n        return result;\n      });\n    });\n  },\n\n};\n\nexport default dbManager;\n"]}