{"version":3,"sources":["../../middleware/inputValidation.js"],"names":["Validation","req","res","next","check","notEmpty","withMessage","isString","isLength","max","min","isEmail","errors","validationErrors","status","json","success","message"],"mappings":";;;;;;;;;;IACMA,U;;;;;;;2BACUC,G,EAAKC,G,EAAKC,I,EAAM;AAC5BF,UAAIG,KAAJ,CAAU,UAAV,EAAsBC,QAAtB,GAAiCC,WAAjC,CAA6C,sBAA7C,EAAqEC,QAArE,GACGD,WADH,CACe,gBADf;;AAGAL,UAAIG,KAAJ,CAAU,QAAV,EAAoBC,QAApB,GAA+BC,WAA/B,CAA2C,oCAA3C;;AAEAL,UAAIG,KAAJ,CAAU,UAAV,EAAsBC,QAAtB,GAAiCC,WAAjC,CAA6C,kBAA7C,EACGE,QADH,CACY,EAAEC,KAAK,EAAP,EADZ,EAEGH,WAFH,CAEe,4CAFf;;AAIAL,UAAIG,KAAJ,CAAU,UAAV,EAAsBC,QAAtB,GAAiCC,WAAjC,CAA6C,sBAA7C,EACGE,QADH,CACY,EAAEE,KAAK,CAAP,EADZ,EAEGJ,WAFH,CAEe,4CAFf;;AAIAL,UAAIG,KAAJ,CAAU,OAAV,EAAmBC,QAAnB,CAA4B,mBAA5B,EAAiDM,OAAjD,GAA2DL,WAA3D,CAAuE,6BAAvE;;AAEA,UAAMM,SAASX,IAAIY,gBAAJ,EAAf;AACA,UAAID,MAAJ,EAAY;AACV,eAAOV,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,KADiB;AAE1BC,mBAAS,4BAFiB;AAG1BL;AAH0B,SAArB,CAAP;AAKD;AACDT;AACD;;;0BAEYF,G,EAAKC,G,EAAKC,I,EAAM;AAC3BF,UAAIG,KAAJ,CAAU,UAAV,EAAsBC,QAAtB,GAAiCC,WAAjC,CAA6C,4BAA7C;AACAL,UAAIG,KAAJ,CAAU,UAAV,EAAsBC,QAAtB,GAAiCC,WAAjC,CAA6C,+BAA7C;;AAEA,UAAMM,SAASX,IAAIY,gBAAJ,EAAf;AACA,UAAID,MAAJ,EAAY;AACV,eAAOV,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,KADiB;AAE1BC,mBAAS,2BAFiB;AAG1BL;AAH0B,SAArB,CAAP;AAKD;AACDT;AACD;;;iCAEmBF,G,EAAKC,G,EAAKC,I,EAAM;AAClCF,UAAIG,KAAJ,CAAU,eAAV,EAA2BC,QAA3B,GAAsCC,WAAtC,CAAkD,mBAAlD,EACGC,QADH,GACcD,WADd,CAC0B,4BAD1B,EAEGE,QAFH,CAEY,EAAEC,KAAK,GAAP,EAFZ,EAGGH,WAHH,CAGe,uCAHf;;AAKAL,UAAIG,KAAJ,CAAU,iBAAV,EAA6BC,QAA7B,GAAwCC,WAAxC,CAAoD,qBAApD,EACGC,QADH,GACcD,WADd,CAC0B,8BAD1B,EAEGE,QAFH,CAEY,EAAEC,KAAK,IAAP,EAFZ,EAGGH,WAHH,CAGe,0CAHf;;AAKA,UAAMM,SAASX,IAAIY,gBAAJ,EAAf;AACA,UAAID,MAAJ,EAAY;AACV,eAAOV,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,KADiB;AAE1BC,mBAAS,0BAFiB;AAG1BL;AAH0B,SAArB,CAAP;AAKD;AACDT;AACD;;;;;;kBAGYH,U","file":"inputValidation.js","sourcesContent":["\nclass Validation {\n  static signup(req, res, next) {\n    req.check('fullname').notEmpty().withMessage('Fullname is required').isString()\n      .withMessage('Enter a string');\n\n    req.check('gender').notEmpty().withMessage('Select your gender from the option');\n\n    req.check('username').notEmpty().withMessage('Enter a username')\n      .isLength({ max: 25 })\n      .withMessage('Username cannot be more than 25 characters');\n\n    req.check('password').notEmpty().withMessage('Password is required')\n      .isLength({ min: 6 })\n      .withMessage('Password must be a minimum of 6 characters');\n\n    req.check('email').notEmpty('Email is required').isEmail().withMessage('Enter a valid email address');\n\n    const errors = req.validationErrors();\n    if (errors) {\n      return res.status(401).json({\n        success: false,\n        message: 'Invalid Signup information',\n        errors,\n      });\n    }\n    next();\n  }\n\n  static login(req, res, next) {\n    req.check('username').notEmpty().withMessage('Username required to Login');\n    req.check('password').notEmpty().withMessage('Password is required to login');\n\n    const errors = req.validationErrors();\n    if (errors) {\n      return res.status(401).json({\n        success: false,\n        message: 'Invalid login information',\n        errors,\n      });\n    }\n    next();\n  }\n\n  static postQuestion(req, res, next) {\n    req.check('questionTitle').notEmpty().withMessage('Title is required')\n      .isString().withMessage('Title can only be a string')\n      .isLength({ max: 250 })\n      .withMessage('Title can only be 250 characters long');\n\n    req.check('questionContent').notEmpty().withMessage('Content is required')\n      .isString().withMessage('Content can only be a string')\n      .isLength({ max: 2500 })\n      .withMessage('Content can only be 2500 characters long');\n\n    const errors = req.validationErrors();\n    if (errors) {\n      return res.status(401).json({\n        success: false,\n        message: 'Invalid question content',\n        errors,\n      });\n    }\n    next();\n  }\n}\n\nexport default Validation;\n"]}