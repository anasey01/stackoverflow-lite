{"version":3,"sources":["../server.js"],"names":["app","use","bodyParser","urlencoded","extended","json","questionRoute","authRouter","voteRoute","req","res","next","error","Error","status","success","message","set","process","env","PORT","listen","get","console","log"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQC,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAJ,IAAIC,GAAJ,CAAQC,qBAAWG,IAAX,EAAR;AACAL,IAAIC,GAAJ,CAAQ,SAAR,EAAmB,qBAAnB,EAA2BK,uBAA3B;AACAN,IAAIC,GAAJ,CAAQ,eAAR,EAAyB,qBAAzB,EAAiCM,mBAAjC;AACAP,IAAIC,GAAJ,CAAQ,SAAR,EAAmB,qBAAnB,EAA2BO,oBAA3B;AACAR,IAAIC,GAAJ,CAAQ,sBAAO,6BAAP,CAAR;;AAEAD,IAAIC,GAAJ,CAAQ,UAACQ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,MAAMC,QAAQ,IAAIC,KAAJ,CAAU,WAAV,CAAd;AACAD,QAAME,MAAN,GAAe,GAAf;AACAH,OAAKC,KAAL;AACD,CAJD;;AAMAZ,IAAIC,GAAJ,CAAQ,UAACW,KAAD,EAAQH,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAA2B;AACjCD,MAAII,MAAJ,CAAWF,MAAME,MAAN,IAAgB,GAA3B;AACAJ,MAAIL,IAAJ,CAAS;AACPU,aAAS,KADF;AAEPH,WAAO;AACLI,eAASJ,MAAMI;AADV;AAFA,GAAT;AAMD,CARD;;AAUAhB,IAAIiB,GAAJ,CAAQ,MAAR,EAAgBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAApC;;AAEApB,IAAIqB,MAAJ,CAAWrB,IAAIsB,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAM;AAChCC,UAAQC,GAAR,+BAAwCxB,IAAIsB,GAAJ,CAAQ,MAAR,CAAxC;AACD,CAFD;;kBAIetB,G","file":"server.js","sourcesContent":["import express from 'express';\nimport morgan from 'morgan';\nimport cors from 'cors';\nimport bodyParser from 'body-parser';\nimport authRouter from './routes/authRoute';\nimport voteRoute from './routes/votesRoute';\nimport questionRoute from './routes/questionRoute';\n\nconst app = express();\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\napp.use('/api/v1', cors(), questionRoute);\napp.use('/api/v1/auth/', cors(), authRouter);\napp.use('/api/v1', cors(), voteRoute);\napp.use(morgan(':method :url :response-time'));\n\napp.use((req, res, next) => {\n  const error = new Error('Not found');\n  error.status = 404;\n  next(error);\n});\n\napp.use((error, req, res, next) => {\n  res.status(error.status || 500);\n  res.json({\n    success: false,\n    error: {\n      message: error.message,\n    },\n  });\n});\n\napp.set('port', process.env.PORT || 8080);\n\napp.listen(app.get('port'), () => {\n  console.log(`Action happening on port ${app.get('port')}`);\n});\n\nexport default app;\n"]}