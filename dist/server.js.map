{"version":3,"sources":["../server.js"],"names":["app","use","bodyParser","urlencoded","extended","json","express","static","path","resolve","__dirname","get","req","res","sendFile","questionRoute","authRouter","voteRoute","next","error","Error","status","success","message","set","process","env","PORT","listen","console","log"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQC,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAJ,IAAIC,GAAJ,CAAQC,qBAAWG,IAAX,EAAR;;AAEAL,IAAIC,GAAJ,CAAQ,qBAAR;AACAD,IAAIC,GAAJ,CAAQK,kBAAQC,MAAR,CAAeC,eAAKC,OAAL,CAAaC,SAAb,EAAwB,UAAxB,CAAf,CAAR;AACAV,IAAIW,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,IAAIC,QAAJ,CAAaN,eAAKC,OAAL,CAAaC,SAAb,EAAwB,oBAAxB,CAAb,CAAd;AAAA,CAAb;AACAV,IAAIC,GAAJ,CAAQ,SAAR,EAAmBc,uBAAnB;AACAf,IAAIC,GAAJ,CAAQ,eAAR,EAAyBe,mBAAzB;AACAhB,IAAIC,GAAJ,CAAQ,SAAR,EAAmBgB,oBAAnB;AACAjB,IAAIC,GAAJ,CAAQ,sBAAO,6BAAP,CAAR;;AAEAD,IAAIC,GAAJ,CAAQ,UAACW,GAAD,EAAMC,GAAN,EAAWK,IAAX,EAAoB;AAC1B,MAAMC,QAAQ,IAAIC,KAAJ,CAAU,WAAV,CAAd;AACAD,QAAME,MAAN,GAAe,GAAf;AACAH,OAAKC,KAAL;AACD,CAJD;;AAMAnB,IAAIC,GAAJ,CAAQ,UAACkB,KAAD,EAAQP,GAAR,EAAaC,GAAb,EAAkBK,IAAlB,EAA2B;AACjCL,MAAIQ,MAAJ,CAAWF,MAAME,MAAN,IAAgB,GAA3B;AACAR,MAAIR,IAAJ,CAAS;AACPiB,aAAS,KADF;AAEPH,WAAO;AACLI,eAASJ,MAAMI;AADV;AAFA,GAAT;AAMD,CARD;;AAUAvB,IAAIwB,GAAJ,CAAQ,MAAR,EAAgBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAApC;;AAEA3B,IAAI4B,MAAJ,CAAW5B,IAAIW,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAM;AAChCkB,UAAQC,GAAR,+BAAwC9B,IAAIW,GAAJ,CAAQ,MAAR,CAAxC;AACD,CAFD;;kBAIeX,G","file":"server.js","sourcesContent":["import express from 'express';\nimport morgan from 'morgan';\nimport cors from 'cors';\nimport path from 'path';\nimport bodyParser from 'body-parser';\nimport authRouter from './routes/authRoute';\nimport voteRoute from './routes/votesRoute';\nimport questionRoute from './routes/questionRoute';\n\nconst app = express();\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\napp.use(cors());\napp.use(express.static(path.resolve(__dirname, './../UI/')));\napp.get('/', (req, res) => res.sendFile(path.resolve(__dirname, './../UI/index.html')));\napp.use('/api/v1', questionRoute);\napp.use('/api/v1/auth/', authRouter);\napp.use('/api/v1', voteRoute);\napp.use(morgan(':method :url :response-time'));\n\napp.use((req, res, next) => {\n  const error = new Error('Not found');\n  error.status = 404;\n  next(error);\n});\n\napp.use((error, req, res, next) => {\n  res.status(error.status || 500);\n  res.json({\n    success: false,\n    error: {\n      message: error.message,\n    },\n  });\n});\n\napp.set('port', process.env.PORT || 8080);\n\napp.listen(app.get('port'), () => {\n  console.log(`Action happening on port ${app.get('port')}`);\n});\n\nexport default app;\n"]}