{"version":3,"sources":["../server.js"],"names":["app","use","bodyParser","urlencoded","extended","json","req","res","next","header","methods","status","questionRoute","authRouter","voteRoute","error","Error","success","message","set","process","env","PORT","listen","get","console","log"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQC,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAJ,IAAIC,GAAJ,CAAQC,qBAAWG,IAAX,EAAR;;AAEAL,IAAIC,GAAJ,CAAQ,UAACK,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1BD,MAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,GAA3C;AACA,MAAIH,IAAII,OAAJ,KAAgB,SAApB,EAA+B;AAC7BH,QAAIE,MAAJ,CAAW,8BAAX,EAA2C,wBAA3C;AACA,WAAOF,IAAII,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,EAArB,CAAP;AACD;AACDG;AACD,CARD;;AAUAR,IAAIC,GAAJ,CAAQ,SAAR,EAAmBW,uBAAnB;AACAZ,IAAIC,GAAJ,CAAQ,eAAR,EAAyBY,mBAAzB;AACAb,IAAIC,GAAJ,CAAQ,SAAR,EAAmBa,oBAAnB;AACAd,IAAIC,GAAJ,CAAQ,sBAAO,6BAAP,CAAR;;AAEAD,IAAIC,GAAJ,CAAQ,UAACK,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,MAAMO,QAAQ,IAAIC,KAAJ,CAAU,WAAV,CAAd;AACAD,QAAMJ,MAAN,GAAe,GAAf;AACAH,OAAKO,KAAL;AACD,CAJD;;AAMAf,IAAIC,GAAJ,CAAQ,UAACc,KAAD,EAAQT,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAA2B;AACjCD,MAAII,MAAJ,CAAWI,MAAMJ,MAAN,IAAgB,GAA3B;AACAJ,MAAIF,IAAJ,CAAS;AACPY,aAAS,KADF;AAEPF,WAAO;AACLG,eAASH,MAAMG;AADV;AAFA,GAAT;AAMD,CARD;;AAUAlB,IAAImB,GAAJ,CAAQ,MAAR,EAAgBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAApC;;AAEAtB,IAAIuB,MAAJ,CAAWvB,IAAIwB,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAM;AAChCC,UAAQC,GAAR,+BAAwC1B,IAAIwB,GAAJ,CAAQ,MAAR,CAAxC;AACD,CAFD;;kBAIexB,G","file":"server.js","sourcesContent":["import express from 'express';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport authRouter from './routes/authRoute';\nimport voteRoute from './routes/votesRoute';\nimport questionRoute from './routes/questionRoute';\n\nconst app = express();\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\napp.use((req, res, next) => {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Headers', '*');\n  if (req.methods === 'OPTIONS') {\n    res.header('Access-Control-Allow-Methods', 'PUT, POST, DELETE, GET');\n    return res.status(200).json({});\n  }\n  next();\n});\n\napp.use('/api/v1', questionRoute);\napp.use('/api/v1/auth/', authRouter);\napp.use('/api/v1', voteRoute);\napp.use(morgan(':method :url :response-time'));\n\napp.use((req, res, next) => {\n  const error = new Error('Not found');\n  error.status = 404;\n  next(error);\n});\n\napp.use((error, req, res, next) => {\n  res.status(error.status || 500);\n  res.json({\n    success: false,\n    error: {\n      message: error.message,\n    },\n  });\n});\n\napp.set('port', process.env.PORT || 8080);\n\napp.listen(app.get('port'), () => {\n  console.log(`Action happening on port ${app.get('port')}`);\n});\n\nexport default app;\n"]}