{"version":3,"sources":["../../../test/routes/routeTest.js"],"names":["should","chai","validToken","use","chaiHttp","describe","it","done","request","server","post","send","fullname","gender","username","password","email","end","err","res","have","status","body","be","a","success","equal","message","header","set","title","content","property","get","id","answer"],"mappings":"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","file":"routeTest.js","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport server from '../../server';\n\nlet should  = chai.should();\n\nlet validToken = '';\n\nchai.use(chaiHttp);\n\ndescribe('/POST', () => {\n  it('signup a new user', (done) => {\n    chai.request(server)\n      .post('/auth/signup')\n      .send({\n        fullname: 'Janet Doe',\n        gender: 'F',\n        username: 'janet_Doe',\n        password: 'password',\n        email: 'janet_doe@email.com',\n      })\n      .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.success.should.equal(true);\n        res.body.message.should.equal('user succesfully registered');\n        done();\n      });\n  });\n});\n\ndescribe('/POST', () => {\n  it('Login a user and issue a valid TOKEN', (done) => {\n    chai.request(server)\n      .post('/auth/login')\n      .send({\n        username: 'janet_Doe',\n        password: 'password',\n      })\n      .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.success.should.equal(true);\n        res.body.message.should.equal('Successfully logged in');\n        validToken = res.header['x-auth-token'];\n        done();\n      });\n  });\n});\n\ndescribe('/POST', () => {\n  it('add a question', (done) => {\n    chai.request(server)\n      .post('/api/v1/questions/')\n      .set('x-auth-token', validToken)\n      .set('content-type', 'application/json')\n      .send({\n        title: 'Using R to create a data table',\n        content: 'I have something I would like to do in R but I don\\'t even know how to begin. I want to create a data table, let\\'s say 8 columns wide. I want to set conditions for each column i.e. Maximum of column value 10, 70, 100, 100, 100, 100, 100, 100 Minimum of column value 0, 0, 0, 0, 0, 0, 0, 20 Sum of the row = 100 Steps of say 5. The idea is that each column steps down until the row = 100 and then it moves to the next row.',\n      })\n      .end((err, res) => {\n        res.body.should.have.property('id');\n        res.body.should.have.property('title');\n        res.body.should.have.property('content');\n        done();\n      });\n  });\n});\n\ndescribe('/GET', () => {\n  it('fetch all questions', (done) => {\n    chai.request(server)\n      .get('/api/v1/questions')\n      .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a('array');\n        res.body[0].should.have.property('id');\n        res.body[0].should.have.property('title');\n        res.body[0].should.have.property('content');\n        done();\n      });\n  });\n});\n\ndescribe('/GET', () => {\n  it('fetch a specific question', (done) => {\n    chai.request(server)\n      .get('/api/v1/questions/1')\n      .set('x-auth-token', validToken)\n      .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.have.property('id');\n        res.body.should.have.property('title');\n        res.body.should.have.property('content');\n        done();\n      });\n  });\n});\n\n\ndescribe('/POST', () => {\n  it('add an answer to a specific question', (done) => {\n    const id = 1;\n    chai.request(server)\n      .post(`/api/v1/questions/${id}/answers`)\n      .set('content-type', 'application/json')\n      .set('x-auth-token', validToken)\n      .send({\n        answer: 'Here is an answer for this question comming from the TEST file',\n      })\n      .end((err, res) => {\n        res.body.should.have.property('id');\n        res.body.should.have.property('answers');\n        done();\n      });\n  });\n});\n"]}